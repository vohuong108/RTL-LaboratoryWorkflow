model LaboratoryWorkflow

enum SampleState {Waiting, Processing, Finished, Error}

class JobRequest
operations
	convertSampleEnum(state: SampleState): Integer = if state = SampleState::Waiting then 1 else 4 endif
end

class Sample
attributes
	sampleID: String
	state: SampleState init = SampleState::Waiting
operations
	getId(): Integer = self.sampleID.substring(7, self.sampleID.size()).toInteger()
	getPlateIndex(): Integer = (let tmp = self.getId().mod(96) in if tmp = 0 then 96 else tmp endif)
	getSrcTubeOrder(): Integer = (let tmp = self.getId().mod(16) in if tmp = 0 then 16 else tmp endif)
	getBatchMPOrder(): Integer = (let tmp = self.getPlateIndex() in ((tmp - 1)/8).floor() + 1)
end

class Assay
attributes
	name: String
end

abstract class ProtocoStep
attributes
	id: String
end

class Wash < ProtocoStep
end

class Incubate < ProtocoStep
attributes
	temperature: Real init = 293.15
	duration: Integer
end

class DistributeSample < ProtocoStep
attributes
	volume: Real init = 0.0
end


class AddReagent < ProtocoStep
attributes
	volume: Real init = 0.0
end

class Reagent
attributes
	name: String
end

composition AssayRegistration between
	JobRequest [1]
	Assay [1] role assay
end

composition SampleRegistration between
	JobRequest [0..1] role jr
	Sample [*] role samples
end

composition Steps between
	Assay [1]
	ProtocoStep [*] role steps
end

composition Reagents between
	Assay [0..1]
	Reagent [*] role reagents
end

association TraceStep between
	ProtocoStep [0..1] role previous
	ProtocoStep [0..1] role next
end

association UsedReagentType between
	Reagent [1] role rType
	AddReagent [*] role jAdd
end